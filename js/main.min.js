"use strict";function _createForOfIteratorHelper(e,t){var n,o,r,a,c="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(c)return o=!(n=!0),{s:function(){c=c.call(e)},n:function(){var e=c.next();return n=e.done,e},e:function(e){o=!0,r=e},f:function(){try{n||null==c.return||c.return()}finally{if(o)throw r}}};if(Array.isArray(e)||(c=_unsupportedIterableToArray(e))||t&&e&&"number"==typeof e.length)return c&&(e=c),a=0,{s:t=function(){},n:function(){return a>=e.length?{done:!0}:{done:!1,value:e[a++]}},e:function(e){throw e},f:t};throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(e,t){var n;if(e)return"string"==typeof e?_arrayLikeToArray(e,t):"Map"===(n="Object"===(n=Object.prototype.toString.call(e).slice(8,-1))&&e.constructor?e.constructor.name:n)||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?_arrayLikeToArray(e,t):void 0}function _arrayLikeToArray(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,o=new Array(t);n<t;n++)o[n]=e[n];return o}document.addEventListener("DOMContentLoaded",function(){document.getElementById("header");var e=document.getElementById("header__burger"),t=document.getElementById("menu__burger"),n=document.getElementById("menu"),o=document.getElementById("overlay");function r(e){l.classList.remove("active"),n.classList.remove("active"),o.classList.remove("active"),document.body.classList.remove("menu-active")}o.addEventListener("click",r),t.addEventListener("click",r),e.addEventListener("click",function(e){n.classList.add("active"),o.classList.add("active"),document.body.classList.add("menu-active")});var a=document.querySelectorAll(".get-img"),c=document.querySelector(".cv-link"),s=(fetch("https://yanessa-dev.lol/api/blogs").then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){console.log("Данные полученыasdasasd:",e),console.log(e[4]);var t=e[4],n=t.photo;t.cv;a.forEach(function(e,t){e.src="https://yanessa-dev.lol/storage/".concat(n[t].file_path.replace("public/",""))}),c.href="https://yanessa-dev.lol/storage/".concat(e[4].file_CV.replace("public/",""))}).catch(function(e){console.error("Произошла ошибка при выполнении запроса:",e)}),document.getElementById("mixitup"));fetch("https://yanessa-dev.lol/api/projects").then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){console.log("Данные получены:",e),e.forEach(function(e){var t=e.sort_order,n=(e.description,e.title),o=e.tag,r=e.file_cover,e=e.id,a=[];o&&Array.isArray(o)&&(a=o.map(function(e){return e.name}));var c,o='\n                    <figure data-id="'.concat(e,'" class="portfolio__card mix ').concat((c=[],a.forEach(function(e){"HTML/CSS верстка"===e?c.push("layout"):"Фронтенд-разработка"===e?c.push("front-end"):"Веб-дизайн"===e&&c.push("design")}),c.join(" ")),'" data-order="').concat(t,'">\n                        <div class="portfolio__card-picture">\n                            <div class="portfolio__tags">\n                                ').concat(a.map(function(e){return'<span class="portfolio__card-tag">'.concat(e,"</span>")}).join(""),'\n                            </div>\n                            <img src="https://yanessa-dev.lol/storage/').concat(r.replace("public/",""),'" alt="project" class="portfolio__card-img" />\n                        </div>\n                        <figcaption class="portfolio__description">').concat(n,"</figcaption>\n                    </figure>\n                ");document.querySelector(".portfolio__cards").insertAdjacentHTML("beforeend",o)}),mixitup(s)}).catch(function(e){console.error("Произошла ошибка при выполнении запроса:",e)});fetch("https://yanessa-dev.lol/api/services").then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){console.log("Данные получены:",e),e.forEach(function(e){e.sort_order;var t=e.title,n=e.description,e=e.file_icon,e='\n            <figure class="services__item">\n              <div class="services__item-front">\n                <div class="services__item-picture">\n                  '.concat(e,'\n                </div>\n                <h4 class="services__item-title">').concat(t,'</h4>\n              </div>\n              <figcaption class="services__item-back">\n                <div class="services__item-descr">\n                  <p>\n                    ').concat(n,'\n                  </p>\n                </div>\n                <div class="services__item-btns">\n                  <button type="button" class="services__item-prev">\n                    <svg\n                      xmlns="http://www.w3.org/2000/svg"\n                      width="24"\n                      height="24"\n                      viewBox="0 0 24 24"\n                      fill="none"\n                    >\n                      <path\n                        d="M6.22438 17.9287C6.36591 18.0667 6.55676 18.1423 6.75438 18.1387C6.95141 18.1391 7.14109 18.064 7.28438 17.9287L16.6144 8.58994V16.6487C16.6144 17.0629 16.9502 17.3987 17.3644 17.3987C17.5658 17.4042 17.7608 17.3273 17.9042 17.1857C18.0477 17.0442 18.1272 16.8502 18.1244 16.6487V6.9165C18.1504 6.80241 18.1498 6.68188 18.1198 6.56444C18.0519 6.29871 17.8444 6.09121 17.5787 6.02334C17.4612 5.99335 17.3407 5.99275 17.2266 6.01873L7.49438 6.01873C7.08017 6.01873 6.74438 6.35451 6.74438 6.76873C6.74438 7.18294 7.08017 7.51873 7.49438 7.51873L15.5644 7.51873L6.22438 16.8587C6.08085 16.9997 6 17.1925 6 17.3937C6 17.5949 6.08085 17.7877 6.22438 17.9287Z"\n                        fill="white"\n                      />\n                    </svg>\n                  </button>\n                </div>\n              </figcaption>\n            </figure>\n          ');document.querySelector("#services__content").insertAdjacentHTML("beforeend",e)})}).catch(function(e){console.error("Произошла ошибка при выполнении запроса:",e)});var i=document.getElementById("tabs");i.addEventListener("click",function(e){var e=e.target,t=i.querySelectorAll(".portfolio__tab-btn");e&&e.classList.contains("portfolio__tab-btn")&&(t.forEach(function(e){e.classList.remove("active")}),e.classList.add("active"),e.classList.contains("all"))});new Typed("#typed",{strings:["web-designer","front-end developer"],typeSpeed:100,backSpeed:75,startDelay:75,loop:!0});t=document.getElementById("services__content");t.querySelectorAll(".services__item");t.addEventListener("click",function(e){(e=e.target)&&e.classList.contains("services__item")?e.classList.add("active"):e&&e.classList.contains("services__item-prev")&&e.closest(".services__item").classList.remove("active")});var e=document.querySelector(".portfolio__cards"),l=document.getElementById("modal");function d(e){l.innerHTML="",console.log(e),"string"==typeof e&&(l.classList.add("active"),o.classList.add("active"),l.innerHTML="",document.createElement("p").classList.add("modal__msg"),l.innerHTML="",l.insertAdjacentHTML("beforeend",'\n        <button type="button" class="modal__close" id="modal__close">\n        <svg\n          xmlns="http://www.w3.org/2000/svg"\n          width="24"\n          height="24"\n          viewBox="0 0 24 24"\n          fill="none"\n        >\n          <path\n            d="M13.1665 12.008L20.762 4.43822C21.0793 4.11791 21.0793 3.599 20.762 3.27868C20.4503 2.95264 19.9355 2.94285 19.6118 3.2568L12.0163 10.8266L4.51839 3.2568C4.36467 3.09288 4.15078 3 3.92702 3C3.70327 3 3.48938 3.09288 3.33566 3.2568C3.0543 3.56628 3.0543 4.04123 3.33566 4.35071L10.8335 11.9096L3.238 19.4685C2.92067 19.7888 2.92067 20.3077 3.238 20.628C3.38907 20.784 3.59685 20.871 3.81309 20.8687C4.03351 20.8867 4.25202 20.8159 4.42074 20.6718L12.0163 13.102L19.6118 20.7593C19.7629 20.9153 19.9707 21.0022 20.1869 21C20.4029 21.001 20.6102 20.9142 20.762 20.7593C21.0793 20.439 21.0793 19.9201 20.762 19.5998L13.1665 12.008Z"\n            fill="white"\n          />\n        </svg>\n      </button>\n        <p class="modal__msg">'.concat(e,"</p>\n        \n        "))),"number"==typeof e&&(e="https://yanessa-dev.lol/api/project/".concat(e=e),fetch(e,{method:"POST"}).then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){console.log("Успешный ответ от сервера:",e);(e=e).sort_order;var t=e.title,n=e.description,o=e.tag,r=e.file_cover,a=(e.id,e.period),e=e.deadline,c=[];o&&Array.isArray(o)&&(c=o.map(function(e){return e.name})),o='\n        <button type="button" class="modal__close" id="modal__close">\n        <svg\n          xmlns="http://www.w3.org/2000/svg"\n          width="24"\n          height="24"\n          viewBox="0 0 24 24"\n          fill="none"\n        >\n          <path\n            d="M13.1665 12.008L20.762 4.43822C21.0793 4.11791 21.0793 3.599 20.762 3.27868C20.4503 2.95264 19.9355 2.94285 19.6118 3.2568L12.0163 10.8266L4.51839 3.2568C4.36467 3.09288 4.15078 3 3.92702 3C3.70327 3 3.48938 3.09288 3.33566 3.2568C3.0543 3.56628 3.0543 4.04123 3.33566 4.35071L10.8335 11.9096L3.238 19.4685C2.92067 19.7888 2.92067 20.3077 3.238 20.628C3.38907 20.784 3.59685 20.871 3.81309 20.8687C4.03351 20.8867 4.25202 20.8159 4.42074 20.6718L12.0163 13.102L19.6118 20.7593C19.7629 20.9153 19.9707 21.0022 20.1869 21C20.4029 21.001 20.6102 20.9142 20.762 20.7593C21.0793 20.439 21.0793 19.9201 20.762 19.5998L13.1665 12.008Z"\n            fill="white"\n          />\n        </svg>\n      </button>\n        <p class="modal__title">'.concat(t,'</p>\n        <div class="modal__categories">\n        ').concat(c.map(function(e){return"<span>".concat(e,"</span>")}).join(""),'\n        </div>\n        <div class="modal__content">\n          <div class="modal__picture">\n            <img \n            src="https://yanessa-dev.lol/storage/').concat(r.replace("public/",""),'"\n              alt="image"\n              class="modal__image"\n            />\n          </div>\n          <div class="modal__info">\n            <p class="modal__text">\n             ').concat(n,'\n            </p>\n            <div class="modal__date">\n              <span>Период</span><span>').concat(a,'</span>\n            </div>\n            <div class="modal__time">\n              <span>Время</span><span>').concat(e,'</span>\n            </div>\n            <a href="#" target="_blank" class="modal__link">Посмотреть</a>\n          </div>\n        </div>\n      '),document.querySelector("#modal").insertAdjacentHTML("beforeend",o)}).catch(function(e){console.error("Произошла ошибка при выполнении запроса:",e)}),l.classList.add("active"),o.classList.add("active"))}document.addEventListener("click",function(e){e.target&&"modal__close"===e.target.id&&(l.classList.remove("active"),o.classList.remove("active"))}),e.addEventListener("click",function(e){d(+e.target.dataset.id)});var u=document.getElementById("form");document.getElementById("submit").addEventListener("click",function(e){var t,n=new FormData(u),o=(console.log("qwe"),_createForOfIteratorHelper(n.entries()));try{for(o.s();!(t=o.n()).done;){var r=t.value;console.log(r[0]+", "+r[1])}}catch(e){o.e(e)}finally{o.f()}fetch("https://yanessa-dev.lol/api/application/create",{method:"POST",body:n}).then(function(e){if(e.ok)return u.reset(),e.json();throw new Error("Network response was not ok.")}).then(function(e){u.reset(),d("сообщение отправлено")}).catch(function(e){u.reset(),d("Сервер не отрпавил сообщение")})});var v=document.querySelectorAll(".slider-item"),f=0;setInterval(function(){var n;f=(f+1)%v.length,n=f,v.forEach(function(e,t){t===n?e.classList.add("active"):e.classList.remove("active")})},4e3);var m=document.querySelectorAll(".anchors-link");n.addEventListener("click",function(e){var n=e.target;m.forEach(function(e,t){n&&n===e&&r()})}),m.forEach(function(t){t.addEventListener("click",function(e){e.preventDefault();var e=t.getAttribute("data-href").substring(1);"header"===e?window.scrollTo({top:0,behavior:"smooth"}):(e=document.getElementById("".concat(e)))&&e.scrollIntoView({behavior:"smooth"})})})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
