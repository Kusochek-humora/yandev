"use strict";document.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("services-block"),r=document.querySelector('[data-form="services"]'),o=e.querySelector("[data-services-length]"),s=document.querySelectorAll('[data-modal="services"] .modal-panel__message'),a={show:"https://yanessa-dev.lol/api/services",delete:"https://yanessa-dev.lol/api/service/destroy/",create:"https://yanessa-dev.lol/api/service/create",showId:"https://yanessa-dev.lol/api/service/",update:"https://yanessa-dev.lol/api/services/update/"};function c(e,t,n){n?fetch(e,t).then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){var t=e.sort_order,n=e.title,o=e.description,s=e.file_icon,e=r.querySelectorAll("input"),a=r.querySelectorAll("textarea");e.forEach(function(e){"sort_order"===e.name&&(e.value=t),"title"===e.name&&(e.value=n)}),a.forEach(function(e){"description"===e.name&&(e.value=o),"file_icon"===e.name&&(e.value=s)})}).catch(function(e){console.error("There has been a problem with your fetch operation:",e)}):t?fetch(e,t).then(function(e){if(e.ok)return e.json();throw r.reset(),r.style.display="none",s[1].style.display="block",new Error("Network response was not ok")}).then(function(e){if(document.querySelector('[data-content="services"] tbody').innerHTML="",c(a.show),r.reset(),r.style.display="none",s[0].style.display="block","showId"===n)return e}).catch(function(e){r.reset(),r.style.display="none",s[1].style.display="block",console.error("There has been a problem with your fetch operation:",e)}):fetch(e).then(function(e){if(e.ok)return e.json();throw new Error("Network response was not ok")}).then(function(e){o.textContent="Всего проектов ".concat(e.length),e.forEach(function(e){var t,n,o,s,a;t=(e=e).sort_order,n=e.title,o=e.description,e=e.id,s=document.querySelector('[data-content="services"] tbody'),(a=document.createElement("tr")).innerHTML="\n          <td>".concat(t,"</td>\n          <td>").concat(n,"</td>\n          <td>").concat(o,'</td>\n          <td class="table-btn" data-modal-btn="services" data-request-services="update" data-services-id="').concat(e,'">\n            <img src="images/update.svg" alt="update" />\n          </td>\n          <td class="table-btn"  data-request-services="delete" data-services-id="').concat(e,'">\n            <img src="images/delete.svg" alt="delete" />\n          </td>\n        '),s.appendChild(a)})}).catch(function(e){console.error("There has been a problem with your fetch operation:",e)})}r.addEventListener("submit",function(e){e.preventDefault();var t=(e=e.target).getAttribute("data-services-method"),n=(n=document.querySelector('[data-form="services"]'),new FormData(n));"add"===t?c(a.create,{method:"POST",body:n}):"update"===t&&(t=e.getAttribute("data-services-id"),c(a.update+t,{method:"POST",body:n}))}),e.addEventListener("click",function(e){var t,n,e=e.target;console.log(e),e.hasAttribute("data-request-services")&&(t=e.getAttribute("data-request-services"),n=e.getAttribute("data-services-id"),e&&e.classList.contains("table-btn")?(console.log(n,t),"update"===t?(r.style.display="block",s.forEach(function(e){return e.style.display="none"}),c(a.showId+n,{method:"POST"},"showId"),r.setAttribute("data-services-method","".concat(t)),r.setAttribute("data-services-id","".concat(n))):"delete"===t&&c(a.delete+n,{method:"POST"})):e&&e.classList.contains("panel__caption-add")&&(r.setAttribute("data-services-method","".concat(t)),r.style.display="block",s.forEach(function(e){return e.style.display="none"})))}),c(a.show)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
