"use strict";document.addEventListener("DOMContentLoaded",function(){var e=document.getElementById("project-block"),o=(document.getElementById("projects-submit"),document.querySelector('[data-form="projects"]')),n=document.querySelector('[data-modal="projects"]').querySelectorAll(".modal-panel__message"),a={show:"https://yanessa-dev.lol/api/projects",delete:"https://yanessa-dev.lol/api/project/destroy/",create:"https://yanessa-dev.lol/api/project/create",showId:"https://yanessa-dev.lol/api/project/",update:"https://yanessa-dev.lol/api/project/update/"};function r(e){fetch(e).then(function(e){if(e.ok)return e.json();throw new Error("Ошибка HTTP, статус "+e.status)}).then(function(e){console.log(e),e.forEach(function(e){var t,o,n,a,r,c,d,s,l;t=(e=e).sort_order,o=e.file_cover,n=e.title,a=e.period,r=e.deadline,c=e.category,d=e.description,e=e.id,c=c||"",s=document.querySelector('[data-content="project"] tbody'),(l=document.createElement("tr")).innerHTML="\n          <td>".concat(t,'</td>\n          <td><img src="uploads').concat(o,'" alt="image" /></td>\n          <td>').concat(n,"</td>\n          <td>").concat(a,"</td>\n          <td>").concat(r,"</td>\n          <td>").concat(c,"</td>\n          <td>").concat(d,'</td>\n          <td data-modal-btn="projects" data-request-project="update" data-update-project-id="').concat(e,'">\n            <img src="images/update.svg" alt="update" />\n          </td>\n          <td data-modal-btn="projects" data-request-project="delete" data-delete-project-id="').concat(e,'">\n            <img src="images/delete.svg" alt="delete" />\n          </td>\n        '),s.appendChild(l)})}).catch(function(e){console.error("Произошла ошибка:",e)})}e.addEventListener("click",function(e){var e=e.target;n.forEach(function(e){return e.style.display="none"}),o.style.display="block",e&&e.hasAttribute("data-request-project")&&(e=e.dataset.requestProject,o.setAttribute("data-project-method","".concat(e)))}),o.addEventListener("submit",function(e){e.preventDefault(),"add"===o.dataset.projectMethod&&function(){var e=new FormData(document.querySelector('[data-form="projects"]')),t=document.getElementById("fileInput");console.log(e.get("title")),0<t.files.length&&e.append("file_cover",t.files[0]);fetch("https://yanessa-dev.lol/api/project/create",{method:"POST",body:e}).then(function(e){if(e.ok)return e.json();throw n[1].style.display="block",o.reset(),o.style.display="none",new Error("Network response was not ok")}).then(function(e){console.log(e),o.reset(),o.style.display="none",n[0].style.display="block",r(a.show)}).catch(function(e){n[1].style.display="block",o.reset(),o.style.display="none",console.error("There has been a problem with your fetch operation:",e)})}(a.create)}),r(a.show);document.querySelector(".panel-form__progress-area");var c=document.querySelector(".panel-form__uploaded-area"),d=document.getElementById("fileInput");d.addEventListener("change",function(e){for(var t=e.target.files,o=0;o<t.length;o++){var n=t[o],a=n.size/1048576;if(2<a)return alert('Файл "'.concat(n.name,'" превышает максимально допустимый размер (2 МБ).')),void(d.value="");n=n.name,r=20;var r=n.length>r?n.substring(0,r-3)+"...":n;c.classList.add("active"),c.textContent=" ".concat(r,", ").concat(a.toFixed(2)," МБ")}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
